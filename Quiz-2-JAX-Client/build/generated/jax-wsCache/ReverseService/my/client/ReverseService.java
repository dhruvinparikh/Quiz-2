
package my.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ReverseService", targetNamespace = "http://service.my/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReverseService {


    /**
     * 
     * @param strMessage
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "camelCase", targetNamespace = "http://service.my/", className = "my.client.CamelCase")
    @ResponseWrapper(localName = "camelCaseResponse", targetNamespace = "http://service.my/", className = "my.client.CamelCaseResponse")
    @Action(input = "http://service.my/ReverseService/camelCaseRequest", output = "http://service.my/ReverseService/camelCaseResponse")
    public String camelCase(
        @WebParam(name = "strMessage", targetNamespace = "")
        String strMessage);

    /**
     * 
     * @param strStr
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reverseString", targetNamespace = "http://service.my/", className = "my.client.ReverseString")
    @ResponseWrapper(localName = "reverseStringResponse", targetNamespace = "http://service.my/", className = "my.client.ReverseStringResponse")
    @Action(input = "http://service.my/ReverseService/reverseStringRequest", output = "http://service.my/ReverseService/reverseStringResponse")
    public String reverseString(
        @WebParam(name = "strStr", targetNamespace = "")
        String strStr);

}
